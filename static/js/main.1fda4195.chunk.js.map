{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","ritem","filter","specificItem","find","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fda4195.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash} from 'react-icons/fa';\nconst List = ({items, removeItem, editItem}) => {\n  return (\n  <div className='grocery-list'>\n    {items.map((item) => {\n      const {id,title} = item;\n      \n      return <article key={id} className=\"grocery-item\">\n        <p className=\"title\">{title}</p>\n        <div className='btn-container'>\n          <button type='button' className='edit-btn' onClick={() => editItem(id)}>\n            <FaEdit />\n          </button>\n          <button type='button' className='delete-btn' onClick={() => removeItem(id)}>\n            <FaTrash />\n          </button>\n         \n        </div>\n      </article>\n    })}\n    </div>\n  );\n}\n\nexport default List\n","import React, { useEffect } from 'react'\n\nconst Alert = ({ type, msg, removeAlert, list }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      removeAlert();\n    }, 3000)\n    return () => clearTimeout(timeout)\n  }, [list])// ie everytime the list is updated\n  return <p className={`alert alert-${type}`}>{msg}</p>\n}\n\nexport default Alert\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list')\n  if (list) {\n    return JSON.parse(localStorage.getItem('list'))\n  } else {\n    return []\n  }\n}\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, msg: '', \n  type: ''});\n  const handleSubmit = (e) => {     \n    e.preventDefault();\n    if(!name) {\n      // display alert \n      showAlert(true,'danger','please enter value')\n    }\n    else if (name && isEditing) {\n      //deal with edit\n      setList(\n        list.map((item) => {\n        if(item.id === editID) {\n          return {...item, title: name }\n        }\n        return item\n      })\n      )\n      setName('')\n      setEditID(null)\n      setIsEditing(false)\n      showAlert(true, 'success', 'value changed')\n    }\n    else {\n      // show alert\n      showAlert(true, 'success', 'task added to the list')\n      const newItem = {id: new Date().getTime().toString(),title: name};\n      setList([...list, newItem]);// list now includes an object newItemy\n      setName('')\n    }\n  }\n\n  const showAlert = (show=false,type=\"\",msg=\"\") => {\n    setAlert({show,type,msg})\n  }\n  const clearList = (show=false,type=\"\",msg=\"\") => {\n    showAlert(true,'danger','empty list')\n    setList([])\n  }\n\n  const removeItem = (id) => {\n    showAlert(true,'danger','task removed')\n    const ritem = list.filter((item) => {\n     return item.id !== id\n    })\n    setList(ritem)\n    //or\n    //setList(list.filter((item) => item.id !== id))\n  }\n\n  const editItem = (id) => {\n    const specificItem = list.find((item) => item.id === id);\n    console.log(specificItem)\n    setIsEditing(true);\n    setEditID(id)\n    setName(specificItem.title)\n  }\n\n\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list])\n\n  return (\n      <section className='section-center'>\n        <form className='grocery-form' onSubmit={handleSubmit}>\n          {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\n          <h3>Todo list</h3>\n          <div className=\"form-control\">\n            <input type='text' className='grocery' placeholder='e.g. code' value={name} onChange={(e) => setName(e.target.value)} />\n            <button type='submit' className='submit-btn'>\n              {isEditing ? 'edit' : 'submit'}\n            </button>\n          </div>\n        </form>\n        {list.length > 0 && (\n          <div className='grocery-container'>\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <button className='clear-btn' onClick={clearList}>clear list</button>\n        </div>\n        )}\n        </section>\n\n  );\n}\n\nexport default App\n\n/*\nsteps:\n-npm install gh-pages --save-dev\n-git remote add origin repo-url\n-add homepage url\n-add the scripts\n-npm run deploy*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}